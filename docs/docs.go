// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/job": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a list of jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/geocloud.Job"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/buffer": {
            "post": {
                "description": "\u003cb\u003e\u003cu\u003eCreate a buffer job\u003c/u\u003e\u003c/b\u003e\n\u0026emsp; - Buffers every geometry by the given distance\n\n\u0026emsp; - For extra info: https://gdal.org/api/vector_c_api.html#_CPPv412OGR_G_Buffer12OGRGeometryHdi\n\u0026emsp; - Pass the geospatial data to be processed in the request body.",
                "consumes": [
                    "application/json",
                    " application/zip"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "createBuffer"
                ],
                "summary": "Create a buffer job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional ID of existing storage to use",
                        "name": "input_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Buffer distance",
                        "name": "distance",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Segment count",
                        "name": "segmentCount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/filter": {
            "post": {
                "description": "\u003cb\u003e\u003cu\u003eCreate a filter job\u003c/u\u003e\u003c/b\u003e\n\u0026emsp; - Drops features and their geometries that don't match the given filter\n\n\u0026emsp; - Pass the geospatial data to be processed in the request body OR\n\u0026emsp; - Pass the ID of an existing dataset with an empty request body",
                "consumes": [
                    "application/json",
                    " application/zip"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "createFilter"
                ],
                "summary": "Create a filter job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional ID of existing dataset to use",
                        "name": "input_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Column to filter on",
                        "name": "filterColumn",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value to filter on",
                        "name": "filterValue",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/removebadgeometry": {
            "post": {
                "description": "\u003cb\u003e\u003cu\u003eCreate a remove bad geometry job\u003c/u\u003e\u003c/b\u003e\n\u0026emsp; - Drops geometries that are invalid\n\n\u0026emsp; - For extra info: https://gdal.org/api/vector_c_api.html#_CPPv413OGR_G_IsValid12OGRGeometryH\n\u0026emsp; - Pass the geospatial data to be processed in the request body OR\n\u0026emsp; - Pass the ID of an existing dataset with an empty request body",
                "consumes": [
                    "application/json",
                    " application/zip"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "createRemovebadgeometry"
                ],
                "summary": "Create a remove bad geometry job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional ID of existing dataset to use",
                        "name": "input_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/reproject": {
            "post": {
                "description": "\u003cb\u003e\u003cu\u003eCreate a reproject job\u003c/u\u003e\u003c/b\u003e\n\u0026emsp; - Reprojects all geometries to the given projection\n\n\u0026emsp; - Pass the geospatial data to be processed in the request body OR\n\u0026emsp; - Pass the ID of an existing dataset with an empty request body",
                "consumes": [
                    "application/json",
                    " application/zip"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "createReproject"
                ],
                "summary": "Create a reproject job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional ID of existing dataset to use",
                        "name": "input_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Target projection EPSG",
                        "name": "targetProjection",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/vectorlookup": {
            "post": {
                "description": "\u003cb\u003e\u003cu\u003eCreate a vector lookup job\u003c/u\u003e\u003c/b\u003e\n\u0026emsp; - Returns the feature and geometry of which the given point intersects\n\n\u0026emsp; - Pass the geospatial data to be processed in the request body OR\n\u0026emsp; - Pass the ID of an existing dataset with an empty request body",
                "consumes": [
                    "application/json",
                    " application/zip"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "createVectorlookup"
                ],
                "summary": "Create a vector lookup job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key via query parameter",
                        "name": "api-key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "API key via header",
                        "name": "X-API-Key",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Optional ID of existing dataset to use",
                        "name": "input_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Longitude",
                        "name": "longitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Latitude",
                        "name": "latitude",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Job"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/{id}/input": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a job's input",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Storage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/{id}/input/content": {
            "get": {
                "produces": [
                    "application/json",
                    " application/zip"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a job's input content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/{id}/output": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a job's output",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Storage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/{id}/output/content": {
            "get": {
                "produces": [
                    "application/json",
                    " application/zip"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a job's output content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/job/{id}/task": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a job's task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/storage": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a list of storage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/geocloud.Storage"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json",
                    " application/zip"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Create a storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storage name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Storage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/storage/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a storage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Storage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/storage/{id}/content": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a storage's content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Storage ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/task": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a list of task types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/geocloud.Task"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        },
        "/task/{type}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    ""
                ],
                "summary": "Get a task type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/geocloud.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "geocloud.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "geocloud.Job": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_time": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "input_id": {
                    "type": "string"
                },
                "output_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "task_type": {
                    "type": "string"
                }
            }
        },
        "geocloud.Storage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "last_used": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "geocloud.Task": {
            "type": "object",
            "properties": {
                "params": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}

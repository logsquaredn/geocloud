version: '3.4'

networks:
  api:
  coremigrate:
  externalmigrate:
  worker:
  secretary:

services:
  api:
    build: .
    image: logsquaredn/geocloud:${GEOCLOUD_TAG:-latest}
    command: a --postgres-enabled --s3-enabled --s3-disable-ssl --s3-force-path-style --amqp-enabled --amqp-queue-name=geocloud
    volumes: [~/.aws/:/root/.aws/:ro]
    networks: [api]
    ports: [8080:8080]
    depends_on: &depends_on [datastore, messagequeue, coremigrate, externalmigrate, objectstore]
    environment: &environment
      GEOCLOUD_POSTGRES_ADDRESS: datastore
      GEOCLOUD_POSTGRES_PASSWORD: geocloud
      GEOCLOUD_S3_BUCKET: geocloud
      GEOCLOUD_S3_ENDPOINT: http://objectstore:9000
      GEOCLOUD_AMQP_ADDRESS: messagequeue
      GEOCLOUD_AMQP_PASSWORD: geocloud
      GEOCLOUD_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-geocloud}
      GEOCLOUD_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-geocloud}
  coremigrate:
    build: .
    image: logsquaredn/geocloud:${GEOCLOUD_TAG:-latest}
    command: cm --postgres-enabled
    networks: [coremigrate]
    depends_on: [datastore]
    environment: *environment
  externalmigrate:
    build: .
    image: logsquaredn/geocloud:${GEOCLOUD_TAG:-latest}
    command: em --postgres-enabled
    networks: [externalmigrate]
    depends_on: [datastore]
    environment: *environment
  secretary:
    build: .
    image: logsquaredn/geocloud:${GEOCLOUD_TAG:-latest}
    command: s --postgres-enabled --s3-enabled --s3-disable-ssl --s3-force-path-style --work-jobs-before 1s
    networks: [secretary]
    depends_on: [datastore, objectstore]
    environment: *environment
  objectstore:
    image: minio/minio:${MINIO_TAG:-latest}
    command: server /var/lib/minio --console-address ":9001"
    volumes: [./hack/minio:/var/lib/minio]
    networks: [api, worker, secretary]
    ports: [9000:9000, 9001:9001]
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID:-geocloud}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-geocloud}
  datastore:
    image: postgres:${POSTGRES_TAG:-alpine}
    networks: [api, coremigrate, externalmigrate, worker, secretary]
    ports: [5432:5432]
    volumes: [./hack/postgresql/:/var/lib/postgresql/]
    environment:
      POSTGRES_DB: geocloud
      POSTGRES_USER: geocloud
      POSTGRES_PASSWORD: geocloud
  messagequeue:
    image: rabbitmq:${RABBITMQ_TAG:-alpine}
    networks: [api, worker]
    ports: [5672:5672, 15672:15672]
    volumes: [./hack/rabbitmq/lib/:/var/lib/rabbitmq/, ./hack/rabbitmq/etc/:/etc/rabbitmq/:ro]
  worker:
    build: .
    image: logsquaredn/geocloud:${GEOCLOUD_TAG:-latest}
    privileged: true
    command: w --postgres-enabled --s3-enabled --amqp-enabled --s3-disable-ssl --s3-force-path-style --amqp-queue-name=geocloud
    volumes: [~/.aws/:/root/.aws/:ro, ./hack/geocloud:/var/lib/geocloud/]
    networks: [worker]
    depends_on: *depends_on
    environment:
      <<: *environment
      GEOCLOUD_REGISTRY_USERNAME: ${GEOCLOUD_REGISTRY_USERNAME:-}
      GEOCLOUD_REGISTRY_PASSWORD: ${GEOCLOUD_REGISTRY_PASSWORD:-}

version: '3.4'

services:
  api:
    build: { context: ., target: api }
    command: --postgres-host=postgres --postgres-password=pwd --aws-shared-credentials-file=/root/.aws/credentials --aws-s3-bucket=logsquaredn-geocloud
    volumes: [~/.aws/:/root/.aws/:ro, config:/etc/geocloud/:ro]
    ports: [8080:8080]
    networks: [api]
    depends_on: [postgres, migrate, infrastructure]
    environment:
      GEOCLOUD_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      GEOCLOUD_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  infrastructure:
    image: hashicorp/terraform:${TERRAFORM_TAG:-light}
    working_dir: /src/infrastructure
    entrypoint: sh -c 'terraform init && terraform apply -auto-approve -input=false && terraform output -json > /tmp/geocloud/config.json'
    volumes: [~/.aws/:/root/.aws/:ro, ./infrastructure/:/src/infrastructure, config:/tmp/geocloud/]
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  postgres:
    image: postgres:${POSTGRES_TAG:-alpine}
    ports: [5432:5432]
    networks: [api, migrate, worker]
    environment:
      POSTGRES_DB: geocloud
      POSTGRES_USER: geocloud
      POSTGRES_PASSWORD: pwd
  migrate:
    build: .
    command: migrate --postgres-host=postgres --postgres-password=pwd
    networks: [migrate]
    depends_on: [postgres]
  worker:
    build: { context: ., target: worker }
    privileged: true
    command: --postgres-host=postgres --postgres-password=pwd --aws-shared-credentials-file=/root/.aws/credentials --aws-s3-bucket=logsquaredn-geocloud -t=buffer -t=filter -t=reproject -t=removeBadGeometry
    volumes: [~/.aws/:/root/.aws/:ro, config:/etc/geocloud/]
    ports: [7778:7778, 1338:1338]
    networks: [worker]
    depends_on: [postgres, migrate, infrastructure]
    environment:
      GEOCLOUD_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      GEOCLOUD_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}

networks:
  api:
  migrate:
  worker:

volumes:
  config:

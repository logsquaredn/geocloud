version: '3.4'

services:
  api:
    build: .
    command: a --postgres-host=postgres --postgres-password=pwd --s3-bucket=logsquaredn-geocloud
    volumes: [~/.aws/:/root/.aws/:ro]
    ports: [8080:8080]
    networks: [api]
    depends_on: [postgres, migrate]
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  postgres:
    image: postgres:${POSTGRES_TAG:-alpine}
    ports: [5432:5432]
    networks: [api, migrate, worker]
    environment:
      POSTGRES_DB: geocloud
      POSTGRES_USER: geocloud
      POSTGRES_PASSWORD: pwd
  migrate:
    build: .
    command: m --postgres-host=postgres --postgres-password=pwd
    networks: [migrate]
    depends_on: [postgres]
  worker:
    build: .
    privileged: true
    command: w --postgres-host=postgres --postgres-password=pwd --s3-bucket=logsquaredn-geocloud -t buffer -t filter -t removebadgeometry -t reproject
    volumes: [~/.aws/:/root/.aws/:ro, geocloud:/var/lib/geocloud/]
    networks: [worker]
    depends_on: [postgres, migrate]
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      GEOCLOUD_REGISTRY_USERNAME: ${GEOCLOUD_REGISTRY_USERNAME}
      GEOCLOUD_REGISTRY_PASSWORD: ${GEOCLOUD_REGISTRY_PASSWORD}

networks:
  api:
  migrate:
  worker:

volumes:
  geocloud:
  # postgresql:

version: "3.4"

services:
  migrate: &rototiller_service
    image: &rototiller_image ghcr.io/logsquaredn/rototiller:${ROTOTILLER_TAG:-latest}
    build: .
    command: migrate --postgres-addr=postgres:5432
    depends_on: &rototiller_depends_on [minio, postgres, rabbitmq]
    environment: &rototiller_environment
      AWS_ACCESS_KEY_ID: rototiller
      AWS_SECRET_ACCESS_KEY: rototiller
      AWS_REGION: us-east-1
      S3_DISABLE_SSL: "true"
      S3_FORCE_PATH_STYLE: "true"
      S3_ENDPOINT: http://minio:9000/
      POSTGRES_USERNAME: rototiller
      POSTGRES_PASSWORD: rototiller
      POSTGRES_SSLMODE: disable
      AMQP_USERNAME: rototiller
      AMQP_PASSWORD: rototiller
  api:
    <<: *rototiller_service
    command: api -p=8081 --amqp-addr=rabbitmq:5672 --postgres-addr=postgres:5432 --bucket-addr=rototiller
    ports: [8080:8081]
  worker: &worker_service
    <<: *rototiller_service
    command: worker --amqp-addr=rabbitmq:5672 --postgres-addr=postgres:5432 --bucket-addr=rototiller
    volumes: [./hack/rototiller:/var/lib/rototiller]
  worker-alt: *worker_service
  secretary:
    <<: *rototiller_service
    command: secretary --postgres-addr=postgres:5432 --bucket-addr=rototiller --archive-bucket-addr=rototiller-archive
  postgres:
    image: postgres:${POSTGRES_TAG:-alpine}
    ports: [5432:5432]
    volumes: [./hack/postgresql:/var/lib/postgresql]
    environment:
      POSTGRES_DB: rototiller
      POSTGRES_USER: rototiller
      POSTGRES_PASSWORD: rototiller
  rabbitmq:
    image: rabbitmq:${RABBITMQ_TAG:-alpine}
    privileged: true
    ports: [5672:5672, 15672:15672]
    volumes: [./hack/rabbitmq/lib:/var/lib/rabbitmq:z, ./hack/rabbitmq/etc:/etc/rabbitmq:ro]
  minio:
    image: minio/minio:${MINIO_TAG:-latest}
    command: server /var/lib/minio --console-address ":9001"
    volumes: [./hack/minio:/var/lib/minio:z]
    ports: [9000:9000, 9001:9001]
    environment:
      MINIO_ROOT_USER: rototiller
      MINIO_ROOT_PASSWORD: rototiller

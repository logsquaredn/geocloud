anchors:
- &default_job_config
  build_log_retention:
    builds: 12
    minimum_succeeded_builds: 3
  serial: true
resources:
- name: geocloud
  type: git
  icon: github
  source:
    uri: git@github.com:logsquaredn/geocloud.git
    branch: main
    private_key: ((geocloud_private_key))
- name: geocloud-latest
  type: registry-image
  icon: docker
  source:
    username: ((docker_username))
    password: ((docker_password))
    repository: logsquaredn/geocloud
    tag: latest
- name: golang-latest
  type: registry-image
  icon: docker
  source:
    username: ((docker_username))
    password: ((docker_password))
    repository: golang
    tag: latest
- name: oci-build-task
  type: registry-image
  icon: docker
  source:
    username: ((docker_username))
    password: ((docker_password))
    repository: vito/oci-build-task
- name: gdal-latest
  type: registry-image
  icon: docker
  source:
    username: ((docker_username))
    password: ((docker_password))
    repository: osgeo/gdal
    tag: latest
- name: ubuntu-bionic
  type: registry-image
  icon: docker
  source:
    username: ((docker_username))
    password: ((docker_password))
    repository: ubuntu
    tag: bionic
jobs:
- name: build-geocloud
  <<: *default_job_config
  plan:
  - in_parallel:
    - get: geocloud
      trigger: true
    - get: golang-latest
      params:
        format: oci
    - get: oci-build-task
    - get: ubuntu-bionic
      params:
        format: oci
  - task: build-geocloud
    image: oci-build-task
    privileged: true
    config:
      platform: linux
      inputs:
      - name: geocloud
      - name: golang-latest
      - name: ubuntu-bionic
      outputs:
      - name: image
      params:
        CONTEXT: geocloud
        IMAGE_ARG_base_image: ubuntu-bionic/image.tar
        IMAGE_ARG_build_image: golang-latest/image.tar
      run:
        path: build
  - put: geocloud-latest
    params:
      image: image/image.tar
    get_params:
      skip_download: true
- name: build-tasks
  <<: *default_job_config
  plan:
  - in_parallel:
    - get: geocloud
      trigger: true
    - get: gdal-latest
      params:
        format: oci
    - get: oci-build-task
    - get: ubuntu-bionic
      params:
        format: oci
  - across:
    - var: task
      values: []
    task: build-geocloud
    image: oci-build-task
    privileged: true
    config:
      platform: linux
      inputs:
      - name: geocloud
      - name: gdal-latest
      - name: ubuntu-bionic
      outputs:
      - name: image
      params:
        CONTEXT: geocloud/tasks/((.:task))
        IMAGE_ARG_base_image: ubuntu-bionic/image.tar
        IMAGE_ARG_build_image: gdal-latest/image.tar
      run:
        path: build

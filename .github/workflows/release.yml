name: Release
on:
  push:
    tags:
      - '*'
jobs:
  tag-push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      # - name: setup-qemu
      #   uses: docker/setup-qemu-action@v1
      - name: setup-buildx
        uses: docker/setup-buildx-action@v1
      - name: registry-login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build-buffer
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=logsquaredn/geocloud:task-buffer
          cache-to: type=inline
          context: tasks/
          load: true
          target: buffer
          tags: logsquaredn/geocloud:task-buffer
      - name: push-buffer
        uses: docker/build-push-action@v2
        with:
          context: tasks/
          push: true
          tags: logsquaredn/geocloud:task-buffer
      - name: build-filter
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=logsquaredn/geocloud:task-filter
          cache-to: type=inline
          context: tasks/
          load: true
          target: filter
          tags: logsquaredn/geocloud:task-filter
      - name: push-filter
        uses: docker/build-push-action@v2
        with:
          context: tasks/
          push: true
          tags: logsquaredn/geocloud:task-filter
      - name: build-removebadgeometry
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=logsquaredn/geocloud:task-removebadgeometry
          cache-to: type=inline
          context: tasks/
          load: true
          target: removebadgeometry
          tags: logsquaredn/geocloud:task-removebadgeometry
      - name: push-removebadgeometry
        uses: docker/build-push-action@v2
        with:
          context: tasks/
          push: true
          tags: logsquaredn/geocloud:task-removebadgeometry
      - name: build-reproject
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=logsquaredn/geocloud:task-reproject
          cache-to: type=inline
          context: tasks/
          load: true
          target: reproject
          tags: logsquaredn/geocloud:task-reproject
      - name: push-reproject
        uses: docker/build-push-action@v2
        with:
          context: tasks/
          push: true
          tags: logsquaredn/geocloud:task-reproject
      - name: save-tasks
        run: docker save -o runtime/tasks.tar logsquaredn/geocloud:task-buffer logsquaredn/geocloud:task-filter logsquaredn/geocloud:task-removebadgeometry logsquaredn/geocloud:task-reproject
      - name: get-short-sha
        id: get-short-sha
        run: echo "::set-output name=short-sha::$(git rev-parse --short ${{ github.sha }})"
      - name: get-tag
        id: get-tag
        run: echo "::set-output name=tag::$(echo ${GITHUB_REF#refs/tags/})"
      - name: build-push
        id: build-push
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=logsquaredn/geocloud:${{ steps.get-short-sha.outputs.short-sha }}
          cache-to: type=inline
          context: .
          push: true
          build-args: |
            version=${{ steps.get-tag.outputs.tag }}
            revision=${{ steps.get-short-sha.outputs.short-sha }}
          tags: |
            logsquaredn/geocloud:${{ steps.get-tag.outputs.tag }}
            logsquaredn/geocloud:latest
    outputs:
      digest: ${{ steps.build-push.outputs.digest }}
      tag: ${{ steps.get-tag.outputs.tag }}
  create-release:
    runs-on: ubuntu-latest
    needs: tag-push
    container:
      image: logsquaredn/geocloud@${{ needs.tag-push.outputs.digest }}
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: create-release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITOPS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ needs.tag-push.outputs.tag }}
      - name: upload-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITOPS_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: /usr/local/geocloud/bin/geocloud
          asset_name: geocloud_linux_amd64
          asset_content_type: application/octet-stream
